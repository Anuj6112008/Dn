# Obfuscated by the Botpalys encoder
#Time: Mon Jul  7 12:46:16 2025
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b''))